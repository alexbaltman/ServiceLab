#!/bin/bash

UNAME=$USER
GERRIT_HOST=cis-gerrit.cisco.com
WD=$(pwd)

_workon() {
  service=$1
  branch=${2:-master}
  current=""
  if [ -f ".stack/current" ]; then
    current=$(cat .stack/current)
  fi

  if [[ $service == "" ]]; then
    if [[ $current == "" ]]; then
      echo "Missing service name: ./stack workon [service]"
      _usage
    else
      echo "Syncing service: ${current}"
      _sync_service "$current"
      _link "$service"
    fi
  elif [[ $service == $current ]]; then
    echo "Already working on $service.  Syncing..."
    _sync_service "$current"
  elif [[ $service != $current ]]; then
    echo "Switching from ${current} to ${service}"
    rm service
    _link "$service"
    _sync_service "$service" "$2"
    vagrant hostmanager
  fi

  _prep
}

_prep() {
  if [ ! -f .stack/id_rsa ]; then
    ssh-keygen -q -t rsa -N "" -f .stack/id_rsa
  fi
  _sync_data
}

_sync_service() {
  service=$1
  branch=${2:-master}

  if [ ! -d "services/${service}" ]; then
    git clone -b "$branch" "ssh://$UNAME@$GERRIT_HOST:29418/service-$service" "services/$service"
  else
    cd service; git pull --ff-only origin "$branch"; cd "$WD"
  fi
}

_sync_data() {
  if [ ! -d ".stack/ccs-data/.git" ]; then
    git clone "ssh://$UNAME@$GERRIT_HOST:29418/ccs-data" .stack/ccs-data
  else
    cd .stack/ccs-data; git pull --ff-only origin; cd "$WD"
  fi
  cd .stack/ccs-data; ./lightfuse.rb --site ccs-dev-1; cd "$WD"
}

_link() {
  service=$1
  echo "${service}" > .stack/current
  if [ ! -h service ]; then
    ln -s "services/$service" service
  fi
  cat > .stack/hosts <<EOF
[$service]
vm-001
vm-002
vm-003
EOF
}

_pull() {
  if [ -d "service/.git" ]; then
    cd service; git pull --ff-only; cd "$WD"
  else
    echo "No service configured.  Run './stack workon [service]'"
  fi
}

_status() {
  echo "Working on: $(cat .stack/current)"
  echo ""
  echo "Services: "
  ls services
}

_clean() {
  vagrant destroy -f
  rm -f service
  rm -rf .stack/current
}

_up() {
  vagrant up
  vagrant hostmanager
}

_deploy() {
  service=$(cat .stack/current)
  vagrant ssh infra-001 -c "cp /vagrant/.stack/hosts /etc/ansible; cd /opt/ccs/services/${service}; sudo heighliner --debug deploy"
}

_usage() {
  echo "Usage: $0 [options] <command>"
  echo "Commands:"
  echo -e "\tstatus             Print status of current environment"
  echo -e "\tworkon [service]   Configure dev environment to work on [service]"
  echo -e "\tup                 Bring up vagrant hosts"
  echo -e "\tpull               Perform a pull --ff-only on the current working [service]"
  echo -e "\tclean              Resets the dev environment, deleting all cloned repos and vms"
  echo -e "\thelp               This help screen"
  echo "Options"
  echo -e "\t--user [username]      Username to clone as"
}

if [ $# == 0 ]; then
  _usage
  exit 1
fi

while [[ $1 != '' ]]; do
  case $1 in
    --user)      shift; UNAME=$1; USER=$1;;
    help)        _usage; exit 0;;
    status)      ACTION='status';;
    workon)      ACTION='workon'; shift; SERVICE=$1; shift; BRANCH=$1;;
    link)        ACTION='link'; shift; SERVICE=$1;;
    pull)        ACTION='pull';;
    up)          ACTION='up';;
    deploy)      ACTION='deploy';;
    clean)       ACTION='clean';;
    *)           _usage; exit 0;;
  esac
  shift
done

case $ACTION in
  status)        _status;;
  workon)        _workon "$SERVICE" "$BRANCH";;
  link)          _link "$SERVICE";;
  up)            _up;;
  deploy)        _deploy;;
  pull)          _pull;;
  clean)         _clean;;
esac
